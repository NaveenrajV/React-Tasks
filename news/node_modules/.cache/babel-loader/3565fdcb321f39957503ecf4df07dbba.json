{"ast":null,"code":"import _slicedToArray from \"/home/codebrahma/Documents/React-Tasks/news/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/codebrahma/Documents/React-Tasks/news/src/components/Source/Source.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst initialState = {\n  loading: true,\n  posts: {},\n  error: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.status) {\n    case \"SUCCESS\":\n      return {\n        loading: false,\n        posts: action.data\n      };\n\n    case \"ERROR\":\n      return {\n        loading: false,\n        posts: {},\n        error: \"Something went wrong\"\n      };\n  }\n};\n\nconst Source = () => {\n  const _useReducer = useReducer(reducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const API_KEY = \"e1dddc105cb747f3bdfd1512ea6801c8\";\n  useEffect(() => {\n    axios.get(\"https://newsapi.org/v2/sources?apiKey=\".concat(API_KEY)).then(response => {\n      // console.log(response.data.sources)\n      dispatch({\n        status: \"SUCCESS\",\n        data: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        status: \"ERROR\"\n      });\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, console.log(state.posts.sources && state.posts.sources[0]), state.loading ? \"Loading......\" : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, 1), state.error ? state.error : null);\n};\n\nexport default Source;","map":{"version":3,"sources":["/home/codebrahma/Documents/React-Tasks/news/src/components/Source/Source.js"],"names":["React","useReducer","useEffect","axios","initialState","loading","posts","error","reducer","state","action","status","data","Source","dispatch","API_KEY","get","then","response","catch","console","log","sources"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC,IADW;AAEnBC,EAAAA,KAAK,EAAC,EAFa;AAGnBC,EAAAA,KAAK,EAAC;AAHa,CAArB;;AAMA,MAAMC,OAAO,GAAI,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAChC,UAAOA,MAAM,CAACC,MAAd;AACE,SAAK,SAAL;AACE,aAAO;AACLN,QAAAA,OAAO,EAAC,KADH;AAELC,QAAAA,KAAK,EAACI,MAAM,CAACE;AAFR,OAAP;;AAKA,SAAK,OAAL;AACA,aAAO;AACLP,QAAAA,OAAO,EAAC,KADH;AAELC,QAAAA,KAAK,EAAC,EAFD;AAGLC,QAAAA,KAAK,EAAC;AAHD,OAAP;AARJ;AAcD,CAfD;;AAiBA,MAAMM,MAAM,GAAE,MAAI;AAAA,sBAEOZ,UAAU,CAACO,OAAD,EAASJ,YAAT,CAFjB;AAAA;AAAA,QAETK,KAFS;AAAA,QAEHK,QAFG;;AAGhB,QAAMC,OAAO,GAAG,kCAAhB;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACa,GAAN,iDAAmDD,OAAnD,GACCE,IADD,CACMC,QAAQ,IAAG;AACf;AACAJ,MAAAA,QAAQ,CAAC;AAACH,QAAAA,MAAM,EAAC,SAAR;AAAkBC,QAAAA,IAAI,EAACM,QAAQ,CAACN;AAAhC,OAAD,CAAR;AACD,KAJD,EAKCO,KALD,CAKOZ,KAAK,IAAG;AACbO,MAAAA,QAAQ,CAAC;AAACH,QAAAA,MAAM,EAAC;AAAR,OAAD,CAAR;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACH,KAAN,CAAYgB,OAAZ,IAAwBb,KAAK,CAACH,KAAN,CAAYgB,OAAZ,CAAoB,CAApB,CAApC,CADH,EAEGb,KAAK,CAACJ,OAAN,GAAgB,eAAhB,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,CAAJ,CAFnC,EAGGI,KAAK,CAACF,KAAN,GAAYE,KAAK,CAACF,KAAlB,GAAwB,IAH3B,CADF;AAOD,CAzBD;;AA2BA,eAAeM,MAAf","sourcesContent":["import React,{useReducer,useEffect} from 'react'\nimport axios from 'axios'\n\nconst initialState = {\n  loading:true,\n  posts:{},\n  error:''\n}\n\nconst reducer = ((state, action)=>{\n  switch(action.status){\n    case \"SUCCESS\":\n      return {\n        loading:false,\n        posts:action.data,\n        \n      }\n      case \"ERROR\":\n      return {\n        loading:false,\n        posts:{},\n        error:\"Something went wrong\"\n      }\n  }\n})\n\nconst Source =()=>{\n\n  const [state,dispatch]=useReducer(reducer,initialState)\n  const API_KEY = \"e1dddc105cb747f3bdfd1512ea6801c8\"\n\n\n  useEffect(() => {\n    axios.get(`https://newsapi.org/v2/sources?apiKey=${API_KEY}`)\n    .then(response =>{\n      // console.log(response.data.sources)\n      dispatch({status:\"SUCCESS\",data:response.data})\n    })\n    .catch(error =>{\n      dispatch({status:\"ERROR\"})\n    })\n  }, [])\n\n\n  return (\n    <div>\n      {console.log(state.posts.sources &&  state.posts.sources[0])}\n      {state.loading ? \"Loading......\":<p>{1}</p>}\n      {state.error?state.error:null}\n    </div>\n  )\n}\n\nexport default Source\n"]},"metadata":{},"sourceType":"module"}